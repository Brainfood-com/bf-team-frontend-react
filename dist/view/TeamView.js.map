{"version":3,"sources":["../../src/view/TeamView.js"],"names":["PropTypes","React","Paper","Typography","Avatar","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","FormControl","FormHelperText","Input","InputLabel","List","ListItem","ListItemAvatar","ListItemIcon","ListItemText","ListItemSecondaryAction","withTeam","withTeams","sendTeamInvite","SimpleTeamShape","TeamShape","InviteUser","emailAddress","ev","target","name","value","setState","onInvite","props","team","state","teamName","handleOnChange","handleOnClose","handleInvite","Component","isRequired","func","result","withTeamInviteTo","options","onInviteRequest","useState","undefined","inviteTo","setInviteTo","handleOnInvite","context","handleInviteRequest","Team","isLoading","partyId","members","userPartyRoles","isOwner","isAdmin","member","memberPartyId","roleTypes","bool","Teams","teams","console","log","renderTeamText","visitTeamLink","visitTeam","teamText","profilePic","arrayOf"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AAEA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,cAA7B,QAAmD,gBAAnD;AAEA,SAAQC,eAAR,EAAyBC,SAAzB,QAAyC,oBAAzC;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DAUU;AACNC,MAAAA,YAAY,EAAE;AADR,KAVV;;AAAA,qEAcmB,UAAAC,EAAE,EAAI;AAAA,UACdC,MADc,GACJD,EADI,CACdC,MADc;AAAA,UAEdC,IAFc,GAECD,MAFD,CAEdC,IAFc;AAAA,UAERC,KAFQ,GAECF,MAFD,CAERE,KAFQ;;AAGrB,YAAKC,QAAL,qBAAgBF,IAAhB,EAAuBC,KAAvB;AACD,KAlBH;;AAAA,oEAoBkB,YAAM;AAAA,UACbE,QADa,GACD,MAAKC,KADJ,CACbD,QADa;AAEpBA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAvBH;;AAAA,mEAyBiB,YAAM;AAAA,wBACM,MAAKC,KADX;AAAA,UACZD,QADY,eACZA,QADY;AAAA,UACFE,IADE,eACFA,IADE;AAAA,UAEZR,YAFY,GAEI,MAAKS,KAFT,CAEZT,YAFY;AAGnBM,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAJA,IAAD;AAAOR,QAAAA,YAAY,EAAZA;AAAP,OAAD,CAAR;AACD,KA7BH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BA+BW;AAAA,UACAQ,IADA,GACQ,KAAKD,KADb,CACAC,IADA;AAAA,UAEAR,YAFA,GAEgB,KAAKS,KAFrB,CAEAT,YAFA;AAGP,aAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAAd,SACL,oBAAC,WAAD,yBAA2BQ,IAAI,CAACE,QAAhC,CADK,EAEL,oBAAC,aAAD,QACE,oBAAC,UAAD,gCADF,EAEE,oBAAC,WAAD,QACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,cAAhB;AAA+B,QAAA,KAAK,EAAEV,YAAtC;AAAoD,QAAA,QAAQ,EAAE,KAAKW;AAAnE,QADF,CAFF,CAFK,EAQL,oBAAC,aAAD,QACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC;AAAtB,kBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC;AAAtB,uBAFF,CARK,CAAP;AAaD;AA/CH;;AAAA;AAAA,EAAgCvC,KAAK,CAACwC,SAAtC;;gBAAaf,U,eACQ;AACjBS,EAAAA,IAAI,EAAEV,SAAS,CAACiB,UADC;AAEjBT,EAAAA,QAAQ,EAAEjC,SAAS,CAAC2C;AAFH,C;;gBADRjB,U,kBAMW;AACpBO,EAAAA,QADoB,oBACXW,MADW,EACH,CAAE;AADC,C;;AA4CxB,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,OAAO,EAAI;AACzC,SAAO,UAAAL,SAAS;AAAA,WAAI,gBAAiC;AAAA,UAA/BM,eAA+B,QAA/BA,eAA+B;AAAA,UAAXb,KAAW;;AAAA,4BACnBjC,KAAK,CAAC+C,QAAN,CAAeC,SAAf,CADmB;AAAA;AAAA,UAC5CC,QAD4C;AAAA,UAClCC,WADkC;;AAEnD,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAR,MAAM,EAAI;AAC/B,YAAIA,MAAJ,EAAY;AAAA,cACHT,IADG,GACiBS,MADjB,CACHT,IADG;AAAA,cACMkB,OADN,4BACiBT,MADjB;;AAEVrB,UAAAA,cAAc,CAACY,IAAD,EAAOkB,OAAP,CAAd;AACD;;AACDF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAND;;AAOA,UAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAnB,IAAI,EAAI;AAClCgB,QAAAA,WAAW,CAAChB,IAAD,CAAX;AACD,OAFD;;AAIA,aAAO,iCACL,oBAAC,SAAD,eAAeD,KAAf;AAAsB,QAAA,eAAe,EAAEa,eAAe,IAAIO;AAA1D,SADK,EAEJJ,QAAQ,IAAI,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,QAAlB;AAA4B,QAAA,QAAQ,EAAEE;AAAtC,QAFR,CAAP;AAID,KAjBe;AAAA,GAAhB;AAkBD,CAnBM;AAqBP,OAAO,IAAMG,IAAI,GAAGV,gBAAgB,GAAGxB,QAAQ;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAWpC;AAAA,yBACoC,KAAKa,KADzC;AAAA,UACAa,eADA,gBACAA,eADA;AAAA,UACiBS,SADjB,gBACiBA,SADjB;AAAA,UAC4BrB,IAD5B,gBAC4BA,IAD5B;;AAEP,UAAIqB,SAAJ,EAAe;AACb,eAAO,2CAAP;AACD;;AAJM,UAOLC,OAPK,GAWHtB,IAXG,CAOLsB,OAPK;AAAA,UAQLpB,QARK,GAWHF,IAXG,CAQLE,QARK;AAAA,UASLqB,OATK,GAWHvB,IAXG,CASLuB,OATK;AAAA,UAULC,cAVK,GAWHxB,IAXG,CAULwB,cAVK;AAYP,UAAMC,OAAO,GAAG,yBAAAD,cAAc,MAAd,CAAAA,cAAc,EAAS,OAAT,CAAd,KAAoC,CAAC,CAArD;AACA,UAAME,OAAO,GAAG,yBAAAF,cAAc,MAAd,CAAAA,cAAc,EAAS,OAAT,CAAd,KAAoC,CAAC,CAArD;AACA,aAAO,oBAAC,KAAD,QACL,gCAAKtB,QAAL,CADK,EAEJ,CAACuB,OAAO,IAAIC,OAAZ,KAAwB,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMd,eAAe,CAACZ,IAAD,CAArB;AAAA;AAAjB,6BAFpB,EAGL,+CAHK,EAIL,oBAAC,IAAD,QACG,qBAAAuB,OAAO,MAAP,CAAAA,OAAO,EAAK,UAAAI,MAAM,EAAI;AAAA,YACdC,aADc,GACcD,MADd,CACdC,aADc;AAAA,YACCC,SADD,GACcF,MADd,CACCE,SADD;AAErB,eAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAED;AAAf,WACL,oBAAC,YAAD,gBADK,EAEL,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEA,aAAvB;AAAsC,UAAA,SAAS,EAAE;AAAjD,UAFK,CAAP;AAID,OANO,CADV,CAJK,CAAP;AAcD;AAvC4C;;AAAA;AAAA,EAAoB9D,KAAK,CAACwC,SAA1B,wCAC1B;AACjBM,EAAAA,eAAe,EAAE/C,SAAS,CAAC2C,IADV;AAEjBa,EAAAA,SAAS,EAAExD,SAAS,CAACiE,IAAV,CAAevB,UAFT;AAGjBP,EAAAA,IAAI,EAAEV;AAHW,CAD0B,2CAOvB;AACpBsB,EAAAA,eADoB,6BACF,CAAE;AADA,CAPuB,UAAX,CAA7B;AA0CP,OAAO,IAAMmB,KAAK,GAAGrB,gBAAgB,GAAGvB,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAStC;AAAA;;AAAA,yBACqC,KAAKY,KAD1C;AAAA,UACAa,eADA,gBACAA,eADA;AAAA,UACiBS,SADjB,gBACiBA,SADjB;AAAA,UAC4BW,KAD5B,gBAC4BA,KAD5B;;AAEP,UAAIX,SAAJ,EAAe;AACb,eAAO,2CAAP;AACD;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;;AACA,UAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAnC,IAAI,EAAI;AAAA,2BACM,MAAI,CAACD,KADX;AAAA,YACtBqC,aADsB,gBACtBA,aADsB;AAAA,YACPC,SADO,gBACPA,SADO;AAE7B,YAAMC,QAAQ,GAAG,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEtC,IAAI,CAACE;AAA5B,UAAjB;;AACA,YAAIkC,aAAJ,EAAmB;AACjB,iBAAO,oBAAC,QAAD;AAAU,YAAA,MAAM,MAAhB;AAAiB,YAAA,SAAS,EAAC,GAA3B;AAA+B,YAAA,IAAI,EAAEA,aAAa,CAACpC,IAAD;AAAlD,aAA2DsC,QAA3D,CAAP;AACD,SAFD,MAEO,IAAID,SAAJ,EAAe;AACpB,iBAAO,oBAAC,QAAD;AAAU,YAAA,MAAM,MAAhB;AAAiB,YAAA,OAAO,EAAE;AAAA,qBAAMA,SAAS,CAACrC,IAAD,CAAf;AAAA;AAA1B,aAAkDsC,QAAlD,CAAP;AACD,SAFM,MAEA;AACL,iBAAOA,QAAP;AACD;AACF,OAVD;;AAWD,aAAO,oBAAC,KAAD,QACJ,wCADI,EAEJ,oBAAC,IAAD,QACG,qBAAAN,KAAK,MAAL,CAAAA,KAAK,EAAK,UAAAhC,IAAI,EAAI;AAAA,YACVsB,OADU,GACuCtB,IADvC,CACVsB,OADU;AAAA,YACDpB,QADC,GACuCF,IADvC,CACDE,QADC;AAAA,YACSqC,UADT,GACuCvC,IADvC,CACSuC,UADT;AAAA,YACqBf,cADrB,GACuCxB,IADvC,CACqBwB,cADrB;AAEjB,YAAMC,OAAO,GAAG,yBAAAD,cAAc,MAAd,CAAAA,cAAc,EAAS,OAAT,CAAd,KAAoC,CAAC,CAArD;AACA,YAAME,OAAO,GAAG,yBAAAF,cAAc,MAAd,CAAAA,cAAc,EAAS,OAAT,CAAd,KAAoC,CAAC,CAArD,CAHiB,CAIf;;AACF,eAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEF;AAAf,WACL,oBAAC,cAAD,QAAgB,oBAAC,MAAD,QAASiB,UAAU,IAAI;AAAK,UAAA,GAAG,EAAEA;AAAV,UAAvB,CAAhB,CADK,EAEJJ,cAAc,CAACnC,IAAD,CAFV,EAGL,oBAAC,uBAAD,QACG,CAACyB,OAAO,IAAIC,OAAZ,KAAwB,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMd,eAAe,CAACZ,IAAD,CAArB;AAAA;AAAjB,+BAD3B,CAHK,CAAP;AAOD,OAZK,CADR,CAFI,CAAP;AAkBA;AA5C8C;;AAAA;AAAA,EAAqBlC,KAAK,CAACwC,SAA3B,yCAC5B;AACjB8B,EAAAA,aAAa,EAAEvE,SAAS,CAAC2C,IADR;AAEjB6B,EAAAA,SAAS,EAAExE,SAAS,CAAC2C,IAFJ;AAGjBI,EAAAA,eAAe,EAAE/C,SAAS,CAAC2C,IAHV;AAIjBa,EAAAA,SAAS,EAAExD,SAAS,CAACiE,IAAV,CAAevB,UAJT;AAKjByB,EAAAA,KAAK,EAAEnE,SAAS,CAAC2E,OAAV,CAAkBnD,eAAlB;AALU,CAD4B,WAAZ,CAA9B","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport {withTeam, withTeams, sendTeamInvite} from  '../api/TeamAPI'\n\nimport {SimpleTeamShape, TeamShape} from '../model/TeamModel'\n\nexport class InviteUser extends React.Component {\n  static propTypes = {\n    team: TeamShape.isRequired,\n    onInvite: PropTypes.func,\n  }\n\n  static defaultProps = {\n    onInvite(result) {},\n  }\n\n  state = {\n    emailAddress: '',\n  }\n\n  handleOnChange = ev => {\n    const {target} = ev\n    const {name, value} = target\n    this.setState({[name]: value})\n  }\n\n  handleOnClose = () => {\n    const {onInvite} = this.props\n    onInvite(false)\n  }\n\n  handleInvite = () => {\n    const {onInvite, team} = this.props\n    const {emailAddress} = this.state\n    onInvite({team, emailAddress})\n  }\n\n  render() {\n    const {team} = this.props\n    const {emailAddress} = this.state\n    return <Dialog open={true}>\n      <DialogTitle>Invite User: {team.teamName}</DialogTitle>\n      <DialogContent>\n        <Typography>[add user search box]</Typography>\n        <FormControl>\n          <TextField name='emailAddress' value={emailAddress} onChange={this.handleOnChange}/>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={this.handleOnClose}>Cancel</Button>\n        <Button onClick={this.handleInvite}>Send invite</Button>\n      </DialogActions>\n    </Dialog>\n  }\n}\n\nexport const withTeamInviteTo = options => {\n  return Component => ({onInviteRequest, ...props}) => {\n    const [inviteTo, setInviteTo] = React.useState(undefined)\n    const handleOnInvite = result => {\n      if (result) {\n        const {team, ...context} = result\n        sendTeamInvite(team, context)\n      }\n      setInviteTo(null)\n    }\n    const handleInviteRequest = team => {\n      setInviteTo(team)\n    }\n\n    return <div>\n      <Component {...props} onInviteRequest={onInviteRequest || handleInviteRequest}/>\n      {inviteTo && <InviteUser team={inviteTo} onInvite={handleOnInvite}/>}\n    </div>\n  }\n}\n\nexport const Team = withTeamInviteTo()(withTeam(class Team extends React.Component {\n  static propTypes = {\n    onInviteRequest: PropTypes.func,\n    isLoading: PropTypes.bool.isRequired,\n    team: TeamShape,\n  }\n\n  static defaultProps = {\n    onInviteRequest() {},\n  }\n\n  render() {\n    const {onInviteRequest, isLoading, team} = this.props\n    if (isLoading) {\n      return <div>Loading</div>\n    }\n\n    const {\n      partyId,\n      teamName,\n      members,\n      userPartyRoles,\n    } = team\n    const isOwner = userPartyRoles.indexOf('Owner') !== -1\n    const isAdmin = userPartyRoles.indexOf('Admin') !== -1\n    return <Paper>\n      <h3>{teamName}</h3>\n      {(isOwner || isAdmin) && <Button onClick={() => onInviteRequest(team)}>Invite/Add Member</Button>}\n      <h6>Team Members</h6>\n      <List>\n        {members.map(member => {\n          const {memberPartyId, roleTypes} = member\n          return <ListItem key={memberPartyId}>\n            <ListItemIcon>[foo]</ListItemIcon>\n            <ListItemText primary={memberPartyId} secondary={'roles'}/>\n          </ListItem>\n        })}\n      </List>\n    </Paper>\n  }\n}))\n\nexport const Teams = withTeamInviteTo()(withTeams(class Teams extends React.Component {\n  static propTypes = {\n    visitTeamLink: PropTypes.func,\n    visitTeam: PropTypes.func,\n    onInviteRequest: PropTypes.func,\n    isLoading: PropTypes.bool.isRequired,\n    teams: PropTypes.arrayOf(SimpleTeamShape),\n  }\n\n  render() {\n    const {onInviteRequest, isLoading, teams} = this.props\n    if (isLoading) {\n      return <div>Loading</div>\n    }\n    console.log('teams', teams)\n    const renderTeamText = team => {\n      const {visitTeamLink, visitTeam} = this.props\n      const teamText = <ListItemText primary={team.teamName}/>\n      if (visitTeamLink) {\n        return <ListItem button component='a' href={visitTeamLink(team)}>{teamText}</ListItem>\n      } else if (visitTeam) {\n        return <ListItem button onClick={() => visitTeam(team)}>{teamText}</ListItem>\n      } else {\n        return teamText\n      }\n    }\n   return <Paper>\n      <h3>Teams</h3>\n      <List>\n        {teams.map(team => {\n          const {partyId, teamName, profilePic, userPartyRoles} = team\n          const isOwner = userPartyRoles.indexOf('Owner') !== -1\n          const isAdmin = userPartyRoles.indexOf('Admin') !== -1\n            //<Team partyId={partyId}/>\n          return <ListItem key={partyId}>\n            <ListItemAvatar><Avatar>{profilePic && <img src={profilePic}/>}</Avatar></ListItemAvatar>\n            {renderTeamText(team)}\n            <ListItemSecondaryAction>\n              {(isOwner || isAdmin) && <Button onClick={() => onInviteRequest(team)}>Invite/Add Member</Button>}\n            </ListItemSecondaryAction>\n          </ListItem>\n        })}\n      </List>\n    </Paper>\n  }\n}))\n"],"file":"TeamView.js"}